import java.util.ArrayList;
import java.util.Scanner;

// Class to represent a customer
class Customer {
    String name;
    String phoneNumber;
    double discountPercent;

    Customer(String name, String phoneNumber, double discountPercent) {
        this.name = name;
        this.phoneNumber = phoneNumber;
        this.discountPercent = discountPercent;
    }
}

// Class to represent a dish
class Dish {
    String hotelName;
    String dishName;
    double price;
    String designation;

    Dish(String hotelName, String dishName, double price, String designation) {
        this.hotelName = hotelName;
        this.dishName = dishName;
        this.price = price;
        this.designation = designation;
    }
}

public class FoodOrderingSystem {
    private ArrayList<Customer> customers;
    private ArrayList<Dish> dishes;

    // Constructor to initialize the system with sample data
    public FoodOrderingSystem() {
        customers = new ArrayList<>();
        // Sample customers
        customers.add(new Customer("Alice", "1234567890", 10.0));
        customers.add(new Customer("Bob", "0987654321", 5.0));
        customers.add(new Customer("Charlie", "1111111111", 15.0));
        customers.add(new Customer("David", "2222222222", 20.0));
        customers.add(new Customer("Eve", "3333333333", 0.0));

        dishes = new ArrayList<>();
        // Sample dishes
        dishes.add(new Dish("Hotel A", "Pizza", 200.0, "Available"));
        dishes.add(new Dish("Hotel B", "Burger", 150.0, "Available"));
        dishes.add(new Dish("Hotel C", "Pasta", 180.0, "Available"));
        dishes.add(new Dish("Hotel D", "Salad", 100.0, "Available"));
        dishes.add(new Dish("Hotel E", "Sushi", 250.0, "Available"));
    }

    // Method to place an order
    public void placeOrder(String dishName) {
        Scanner scanner = new Scanner(System.in);
        Dish selectedDish = null;

        // Search for the dish
        for (Dish dish : dishes) {
            if (dish.dishName.equalsIgnoreCase(dishName)) {
                selectedDish = dish;
                break;
            }
        }

        if (selectedDish == null) {
            System.out.println("Dish not available.");
            return;
        }

        System.out.print("Enter your phone number: ");
        String phoneNumber = scanner.nextLine();
        Customer existingCustomer = null;

        // Check for existing customer
        for (Customer customer : customers) {
            if (customer.phoneNumber.equals(phoneNumber)) {
                existingCustomer = customer;
                break;
            }
        }

        // Add new customer if not found
        if (existingCustomer == null) {
            System.out.print("Enter your name: ");
            String name = scanner.nextLine();
            customers.add(new Customer(name, phoneNumber, 0.0));
            existingCustomer = customers.get(customers.size() - 1);
        }

        System.out.print("Enter your address: ");
        String address = scanner.nextLine();

        // Calculate the final amount
        double totalAmount = selectedDish.price;
        double cgst = totalAmount * 0.09;
        double sgst = totalAmount * 0.09;
        double discountAmount = totalAmount * (existingCustomer.discountPercent / 100);
        double finalAmount = totalAmount + cgst + sgst - discountAmount;

        System.out.println("Total amount to be paid: " + finalAmount);

        System.out.print("Do you wish to continue? (yes/no): ");
        String choice = scanner.nextLine();

        if (choice.equalsIgnoreCase("yes")) {
            System.out.print("Enter payment method (cash/card): ");
            String paymentMethod = scanner.nextLine();

            if (paymentMethod.equalsIgnoreCase("cash")) {
                System.out.println("Order placed successfully!");
            } else if (paymentMethod.equalsIgnoreCase("card")) {
                System.out.print("Enter your bank balance: ");
                double bankBalance = scanner.nextDouble();

                if (finalAmount <= bankBalance) {
                    System.out.println("Amount paid successfully! Your order has been placed.");
                } else {
                    System.out.println("Insufficient balance. Order not placed.");
                }
            } else {
                System.out.println("Invalid payment method. Order not placed.");
            }
        } else {
            System.out.println("Order cancelled.");
        }
    }

    public static void main(String[] args) {
        FoodOrderingSystem system = new FoodOrderingSystem();
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the dish name to order: ");
        String dishName = scanner.nextLine();

        system.placeOrder(dishName);
    }
}